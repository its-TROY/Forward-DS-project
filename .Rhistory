#table(weather_training$WindGustDir)
boxplot(weather_training$MinTemp)
boxplot(weather_training$Humidity9am)
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
boxplot(weather_data$Humidity9am)
view(weather_data)
view(weather_training)
view(weather_data)
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$Humidity9am)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
boxplot(weather_data$MinTemp)
boxplot(weather_training$Humidity9am)
print(dataframe)
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$MinTemp)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$MinTemp, xlab("MinTemp"))
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$MinTemp, xlab("MinTemp"))
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
boxplot(weather_data$Humidity9am)
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
clean_data <- weather_training
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
clean_data <- weather_data
boxplot(clean_data)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
view(clean_data)
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
clean_data <- weather_training
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
clean_data <- weather_data
boxplot(clean_data)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
#table(weather_training$WindGustDir)
view(clean_data)
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$Humidity9am)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$MinTemp)
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
boxplot(weather_data$MinTemp)
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$MinTemp, xlab = "Min Temp")
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
boxplot(weather_data$MinTemp, xlab = "Min temp")
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
weather_data<-dataframe
print("Remove outliers")
print(dataframe)
boxplot(weather_data$MinTemp, xlab = "Min Temp")
}
remove_outliers(weather_training, c("MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindSpeed9am", "WindSpeed3pm", "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"))
weather_training<-read.csv("Weather Training Data.csv")
weather_training
view(weather_training)
summay(weather_training)
summary(weather_data)
summary(weather_training)
view(weather_data)
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset$price)
boxplot(dataset$median_playtime)
boxplot(dataset$average_playtime)
boxplot(dataset)
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset)
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset)
boxplot(dataset$appid)
boxplot(dataset$average_playtime)
boxplot(dataset$median_playtime)
boxplot(dataset$price)
boxplot(dataset$price)
boxplot(dataset$median_playtime)
boxplot(dataset$median_playtime)
boxplot(dataset$median_playtime)
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset)
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset$positive_ratings)
barplot(y = dataset$price, x = dataset$positive_ratings, ylab = "Price", xlab = "postiveRating")
barplot(dataset, ylab = "Price", xlab = "postiveRating")
barplot(dataset$price,name = dataset$name, xlab = "name", ylab = "age")
barplot(dataset$price,name = dataset$name, xlab = "name", ylab = "price")
plot(dataset$price,name = dataset$name, xlab = "name", ylab = "price")
boxplot(dataset$price,name = dataset$name, xlab = "name", ylab = "price")
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset$price,name = dataset$name, xlab = "name", ylab = "price")
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
dataset<-read.csv("D:\\Programing\\universty programs\\steam.csv")
dataset
boxplot(dataset$price,name = dataset$name, xlab = "name", ylab = "price")
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset, c('price', 'positive_ratings'))
detect_outlier = function(x) {
Quantile1 = quantile(x, probs=0.25)
Quantile3 = quantile(x, probs=0.75)
IQR = Quantile3 - Quantile1
x > Quantile3 + (IQR*1.5) | x < Quantile1 - (IQR*1.5)
}
remove_outliers = function(dataframe, columns = names(dataframe)){
for(col in columns){
dataframe = dataframe[!detect_outlier(dataframe[[col]]), ]
}
dataset<-dataframe
boxplot(dataset)
}
remove_outliers(dataset$price, c('price', 'positive_ratings'))
boxplot(dataset$appid)
boxplot(dataset$positive_ratings)
boxplot(dataset$appid)
boxplot(dataset$appid)
outliers<- function(x){
Q1 <- quantile(x, probs = 0.25)
Q3 <- quantile(x, probs = 0.75)
iqr <- Q3 - Q1
upper <- Q3 + (iqr*1.5)
lower <- q1 - (iqr*1.5)
x>upper | lower<x
}
remove_outliers <- function(df,cols = names(df)){
for(col in cols){
df<-df[!outliers(df[[col]]),]
}
df
}
outliers<- function(x){
Q1 <- quantile(x, probs = 0.25)
Q3 <- quantile(x, probs = 0.75)
iqr <- Q3 - Q1
upper <- Q3 + (iqr*1.5)
lower <- q1 - (iqr*1.5)
x>upper | lower<x
}
remove_outliers <- function(df,cols = names(df)){
for(col in cols){
df<-df[!outliers(df[[col]]),]
}
df
}
remove_outliers(dataset, c('price','positive_ratings'))
boxplot(dataset$appid)
outliers<- function(x){
Q1 <- quantile(x, probs = 0.25)
Q3 <- quantile(x, probs = 0.75)
iqr <- Q3 - Q1
upper <- Q3 + (iqr*1.5)
lower <- Q1 - (iqr*1.5)
x>upper | lower<x
}
remove_outliers <- function(df,cols = names(df)){
for(col in cols){
df<-df[!outliers(df[[col]]),]
}
df
}
remove_outliers(dataset, c('price','positive_ratings'))
df<-dataset
outliers<- function(x){
Q1 <- quantile(x, probs = 0.25)
Q3 <- quantile(x, probs = 0.75)
iqr <- Q3 - Q1
upper <- Q3 + (iqr*1.5)
lower <- Q1 - (iqr*1.5)
x>upper | lower<x
}
remove_outliers <- function(df,cols = names(df)){
for(col in cols){
df<-df[!outliers(df[[col]]),]
}
df<-dataset
boxplot(df$price)
}
remove_outliers(dataset, c('price','positive_ratings'))
boxplot(dataset$appid, outline = FALSE)
boxplot(dataset$positive_ratings, outline = FALSE)
boxplot(dataset$price, outline = FALSE)
remove_outliers(dataset, c('price', 'positive_ratings'))
help(outline)
boxplot(dataset$price, outline = FALSE)
boxplot(dataset$price, outline = FALSE)
mean(dataset$price[!dataset$price %in% res$out])
boxplot(dataset$price, outline = FALSE)
mean(dataset$price[!dataset$price %in% dataset$out])
boxplot(dataset$price, outline = T)
boxplot(dataset$price, outline = F)
mean(dataset$price[!dataset$price %in% dataset$out])
boxplot(dataset, outline = F)
boxplot(dataset, outline = F)
boxplot(dataset, outline = F)
boxplot(dataset, outline = F)
boxplot(dataset$price, outline = F)
mean(weather_data$MinTemp[!weather_data$MinTemp %in% weather_data$out])
mean(weather_data$MinTemp[!weather_data$MinTemp %in% weather_data$out],na.rm = T)
