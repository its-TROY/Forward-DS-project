source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
plot(1, 2, 3, 4, 5, 6, 7, 8, 9)
source("~/R/plots.R", echo=TRUE)
plot(c(1, 2, 3, 4, 5, 6, 7, 8, 9))
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
boxplot(myData$salary)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/DT-revision.R", echo=TRUE)
source("~/R/DT-revision.R", echo=TRUE)
source("~/R/DT-revision.R", echo=TRUE)
source("~/R/DT-revision.R", echo=TRUE)
source("~/R/DT-revision.R", echo=TRUE)
source("~/R/DT-revision.R", echo=TRUE)
DT = rpart(computer ~ age + income + credit_range + student)
DT = rpart(computer ~ age + income + credit_range + student, data = myData, minsplit = 2)
rpart.plot(DT)
new = data.frame(age = "from 31 to 40", income = "high", student = "not student", credit_range = "excellent")
new
source("~/R/DT-revision.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/Apriori-algorithm.R", echo=TRUE)
source("~/R/plots.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
install.packages(xlsx)
source("~/R/DF.R", echo=TRUE)
install.packages("xlsx")
package.skeleton()
packageStatus()
install.packages("readxl")
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
setwd("~/R")
setwd("~/R")
search()
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
mat = matrix(1:6, nrow = 3, ncol = 2, byrow = TRUE)
rbind(mat, c(7, 8))
print(mat)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
source("~/R/DF.R", echo=TRUE)
list = list("ahmad", 18, 182)
names(list) = c("name", "age", "height")
print(list)
source("~/R/DF.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
function(x, y, z){
}
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
vec = c(10:100, 10)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
apriori(myData)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
library(rpart)
library(rpart.plot)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
apriori("myData")
search()
library(arules)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
maximum = function(x, y, z){
list = c(x, y, z)
maxy = list[1]
if(y > max){
maxy = list[2]
}
if(z > max){
maxy = list[3]
}
return(maxy)
}
maximum = function(x, y, z){
list = c(x, y, z)
maxy = list[1]
if(y > max){
maxy = list[2]
}
if(z > max){
maxy = list[3]
}
return(maxy)
}
maximum(5, 6, 7)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
source("~/R/test.R", echo=TRUE)
maximum = function(x, y, z){
maxy = x
if(y > maxy){
maxy = y
}
if(z > maxy){
maxy = z
}
return(maxy)
}
maximum(5, 6, 7)
source("~/R/test.R", echo=TRUE)
maximum = function(x, y, z){
maxy = x
if(y > maxy){
maxy = y
}
else if(z > maxy){
maxy = z
}
return(maxy)
}
maximum(5, 6, 7)
maximum = function(x, y, z){
maxy = x
if(y > maxy){
maxy = y
}
if(z > maxy){
maxy = z
}
return(maxy)
}
maximum(5, 6, 7)
library(rpart)
search()
version
update()
install.packages('installer')
updateR()
library(insatller)
install.packages("installr")
library(installr)
updateR()
version
version
library()
install.packages("arules")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
version
library()
install.packages("arules")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
library(rpart)
rpart()
install.packages(rpart.plot)
install.packages("rpart.plot")
install.packages("tidyverse")
setwd("C:\\Users\\divos\\Documents\\R\\forward-project")#Youssef
source("~/R/forward-project/weather-DT.R", echo=TRUE)
class(weather_training)
class(weather_training$Sunshine`)
;
class()
q
:
x = 0
exit
:wq
exit()
``
class(weather_training$Sunshine)
class(weather_training$WindDir3pm)
class(weather_training$WindSpeed9am)
library(tidyverse)
glimpse(weather_training)
as.numeric(weather_training$WindSpeed9am, weather_training$WindDir3pm)
class(weather_training$WindSpeed3pm)
test = as.numeric(weather_training$WindSpeed9am, weather_training$WindSpeed3pm)
view(test)
test = as.numeric(weather_training$WindSpeed9am)
view(test)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
view(weather_training)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
test2
test2 = 0
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
view(weather_training)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
view(frame2)
boxplot(frame2$MinTemp)
weather_training %>% filter(MinTemp < min(MinTemp))
print(min(weather_training$MinTemp))
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
filter(weather_training$MinTemp, MinTemp < min(MinTemp))
filter(weather_training$MinTemp, MinTemp < -8.5)
for(i in weather_training$MinTemp){
if(i < min(weather_training$MinTemp)){
weather_training[-c(i)]
}
}
for(i in weather_training$MinTemp){
if(i < min(weather_training$MinTemp)){
weather_training[-c(i)]
}
}
print(weather_training$MinTemp)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
boxplot(data_no_out$MinTemp)
boxplot(weather_training$MinTemp)
boxplot(data_no_out$MinTemp)
view(weather_training)
view(data_no_out)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
boxplot(weather_training)
boxplot(weather_training)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
remove_outliers(weather_training)
remove_outliers(weather_training)
source("~/R/forward-project/weather-DT.R", echo=TRUE)
remove_outliers(weather_training)
